<!--
Development Tools

Historical Version:   
V1.0 - Diego Iacono
escape special characters

<	&lt;
>	&gt;
"	&quot;
&	&amp;
'	&apos;
					 
-->
<project name="Ndvr">
	<description>Developer Magics Tools</description>
	
	<loadproperties srcFile="ndvrTool.properties"/>

	<taskdef name="ndvr" classname="${taskNdrClass}" classpath="${buildPath}"/>
	<taskdef name="cisEPG" classname="${taskSOAPClass}" classpath="${buildPath}"/>
	
	<!-- PUBLIC TASK DEFINITIONS START-->

	<target name="Misc-GET Airing Ids CIS" description="Deploy specified component">
		<ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
		<loadresource property="channelsInjested">
		  <file file="${moxiChannelsFile}"/>
	    </loadresource>
		<getDay property="today"/>
		<getDay text="1" property="tomorrow"/>
		<input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
		<input message="Start Time"  addproperty="startRequest" defaultvalue="${today}T00:00:00.000Z"/>
		<input message="End Time"  addproperty="endRequest" defaultvalue="${tomorrow}T00:00:00.000Z"/>
		<property name="soapRequestData" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			   &lt;soapenv:Header/&gt;
			   &lt;soapenv:Body&gt;
			      &lt;ns3:ContentQueryRequestType messageId=&quot;1&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot; xmlns:ns2=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot; xmlns:ns3=&quot;ContentQueryRequestType&quot;&gt;
			         &lt;ns2:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
			            &lt;ContentDataModel type=&quot;ADI11Merch&quot;/&gt;
			            &lt;ns2:QueryFilter op=&quot;include&quot;&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;channel_id:${channelSelected}&lt;/ns2:AdvancedFilterElement&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;start_time:[&quot;${startRequest}&quot; TO &quot;${endRequest}&quot;]&lt;/ns2:AdvancedFilterElement&gt;
			            &lt;/ns2:QueryFilter&gt;
			         &lt;/ns2:ContentQuery&gt;
			        &lt;core:Ext&gt;
			        &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
			        &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
			        &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			            &lt;sorting&gt;
			                &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
			            &lt;/sorting&gt;
			        &lt;/QueryParameters&gt;
			         &lt;/core:Ext&gt;
			      &lt;/ns3:ContentQueryRequestType&gt;
			   &lt;/soapenv:Body&gt;
			&lt;/soapenv:Envelope&gt;" />
		<cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${soapRequestData}" outFile="${aringIdFiles}"/> 
	</target>
	<target name="A-)Delete Provider Schedule/Recording" description="Deploy specified component">
		<input message="Subscriber Name" addproperty="subscriber" />
		<ndvr method="DELETE" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/scheduleevent?subscriber=${subscriber}"/> 
	</target>
	
	<target name="A-)Delete Subscriber Schedule/Recording" description="Deploy specified component">
			<input message="Subscriber Name" addproperty="subscriber" />
			<ndvr method="DELETE" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/scheduleevent?subscriber=${subscriber}"/> 
    </target>
	
	<target name="Misc-StarRecording" description="Deploy specified component">
		 <input message="Recording Id" addproperty="idRecording" />
		 <ndvr method="PUT" payload="{}" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recording/${idRecording}/start"/> 
	</target>
	
	<target name="A-)Create Subscriber FULL" description="Deploy specified component">
		<input message="Subscriber Name" addproperty="subscriberName" />
		<ndvr method="POST" payload="{name: ${subscriberName},
		 							  externalId: ${subscriberName},
		 							  properties: {entry: 
		 											[{key: storageQuota, value: 100000},
		 											 {key: tunerQuota,value: 23000}]}}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscriber"/>
		<echo>----------------------------Subscriber ${subscriberName} Created--------------------------</echo>
		<echo>Creating Device -> STB_${subscriberName} for subscriber: ${subscriberName}</echo>
		<ndvr method="POST" payload="{
			    name: STB_${subscriberName},
			    externalId: STB_${subscriberName},
			    subscriber: {
			        externalId: ${subscriberName}
			    },
			    properties: {
			        entry: [
			            {
			                key: deviceType,
			                value: STB
			            }
			        ]
			    }
			}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/device"/> 
		<echo>----------------------------Device Created!-----------------------------</echo>
		<echo>Channel Package will be created -> PackageName: subscription_${subscriberName}</echo>
		<ndvr method="POST" payload="{name: subscription_${subscriberName}}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackage" filename="${channelPackageId}" channelPackageId="true" />
		<echo>----------------------------Package Created!-----------------------------</echo>
		<echo>Subscription will be created -> subscription_${subscriberName}</echo>
		<ndvr method="POST" payload="{name: subscription_${subscriberName},subscriber: {externalId: ${subscriberName}}}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscription"/> 
		<echo>----------------------------Subscription Created!-----------------------------</echo>
		<input message="Please add the ChannelIds List. ChannelId,ChannelId" addproperty="channelIdsInput" />
		<loadresource property="cpId">
			<file file="${channelPackageId}"/>
	    </loadresource>
		<doPackageEntry text="${channelIdsInput}" text2="${cpId}" />
		<echo>----------------------------Package ENTRY Created!-----------------------------</echo>
	</target>
	
	<target name="A-)Create Subscriber Demo" description="Deploy specified component">
		<input message="Subscriber Name" addproperty="subscriberName" />
		<ndvr method="POST" payload="{externalId: ${subscriberName},name: ${subscriberName}, properties: {entry: [{key: QUOTA_TYPE,value: MB},{key: ASSIGNED_QUOTA,value: 552000},{key: QUOTA_CONFLICT_RESOLUTION_POLICY,value: OLDEST_CONTENT_FIRST_EXPIRE_POLICY},{key: ASSIGNED_TUNERS,value: 23000}]}}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscriber"/>
		<echo>----------------------------Subscriber ${subscriberName} Created--------------------------</echo>
		<echo>Creating Device -> STB_${subscriberName} for subscriber: ${subscriberName}</echo>
		<ndvr method="POST" payload="{
			    name: STB_${subscriberName},
			    externalId: STB_${subscriberName},
			    subscriber: {
			        externalId: ${subscriberName}
			    },
			    properties: {
			        entry: [
			            {
			                key: deviceType,
			                value: STB
			            }
			        ]
			    }
			}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/device"/> 
		<echo>----------------------------Device Created!-----------------------------</echo>
		<echo>Subscription will be created -> subscription_${subscriberName}</echo>
		<input message="Subscription Name" addproperty="SubscriptionName" defaultvalue="Demo" />
		<ndvr method="POST" payload="{name: ${SubscriptionName},subscriber: {externalId: ${subscriberName}}}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscription"/> 
		<echo>----------------------------Subscription Created!-----------------------------</echo>
	</target>
	
	
	<target name="A-)Create Subscriber Quote Limit" description="Deploy specified component">
			<input message="Subscriber Name" addproperty="subscriberName" />
			<input message="Quote Type" addproperty="type" />
			<input message="Quote Limit" addproperty="limit" />
			<ndvr method="POST" payload="{
			    name: ${subscriberName},
			    externalId: ${subscriberName},
			    properties: {
			        entry: [
			            {
			                key: QUOTA_TYPE,
			                value: ${type}
			            },
			            {
			                key: ASSIGNED_QUOTA,
			                value: ${limit}
			            },
			            {
			                key: QUOTA_CONFLICT_RESOLUTION_POLICY,
			                value: OLDEST_CONTENT_FIRST_EXPIRE_POLICY
			            },
			            {
			                key: ASSIGNED_TUNERS,
			                value: 23000
			            }
			        ]
			    }
			}"	
			 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscriber"/>
			<echo>----------------------------Subscriber ${subscriberName} Created--------------------------</echo>
			<echo>Creating Device -> STB_${subscriberName} for subscriber: ${subscriberName}</echo>
			<ndvr method="POST" payload="{
				    name: STB_${subscriberName},
				    externalId: STB_${subscriberName},
				    subscriber: {
				        externalId: ${subscriberName}
				    },
				    properties: {
				        entry: [
				            {
				                key: deviceType,
				                value: STB
				            }
				        ]
				    }
				}"	
			 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/device"/> 
			<echo>----------------------------Device Created!-----------------------------</echo>
			<echo>Channel Package will be created -> PackageName: subscription_${subscriberName}</echo>
			<ndvr method="POST" payload="{name: subscription_${subscriberName}}"	
			 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackage" filename="${channelPackageId}" channelPackageId="true" />
			<echo>----------------------------Package Created!-----------------------------</echo>
			<echo>Subscription will be created -> subscription_${subscriberName}</echo>
			<ndvr method="POST" payload="{name: subscription_${subscriberName},subscriber: {externalId: ${subscriberName}}}"	
			 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscription"/> 
			<echo>----------------------------Subscription Created!-----------------------------</echo>
			<input message="Please add the ChannelIds List. ChannelId,ChannelId" addproperty="channelIdsInput" />
			<loadresource property="cpId">
				<file file="${channelPackageId}"/>
		    </loadresource>
			<doPackageEntry text="${channelIdsInput}" text2="${cpId}" />
			<echo>----------------------------Package ENTRY Created!-----------------------------</echo>
		</target>
	
	<target name="A-)Create Subscriber Provider" description="Deploy specified component">
			<input message="Subscriber Name" addproperty="subscriberName" />
			<ndvr method="POST" payload="{name: ${subscriberName},
			 							  externalId: ${subscriberName},
			 							  properties: {entry: 
			 											[{key: storageQuota, value: 100000},
			 											 {key: tunerQuota,value: 23000}]}}"	
			 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscriber"/> 
	</target>
	
	<target name="Misc-CreateDevice" description="Deploy specified component">
		<input message="Subscriber Name" addproperty="subscriberName" />
		<input message="Device Name" addproperty="deviceName" defaultvalue="STB_${subscriberName}" />
		<ndvr method="POST" payload="{
			    name: ${deviceName},
			    externalId: ${deviceName},
			    subscriber: {
			        externalId: ${subscriberName}
			    },
			    properties: {
			        entry: [
			            {
			                key: deviceType,
			                value: STB
			            }
			        ]
			    }
			}"	
		url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/device"/> 
	</target>
	
	<target name="Misc-CreateChannelPackage" description="Deploy specified component">
		<input message="Package Name" addproperty="packageName"  defaultvalue="subscription_Arris"/>
		<ndvr method="POST" payload="{name: ${packageName}}"	
		url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackage" filename="${channelPackageId}" channelPackageId="true" /> 
   </target>
	
	<target name="Misc-CreateChannelPackageENTRY" description="Deploy specified component">
		<input message="Channel Id" addproperty="channelId" />
		<loadresource property="cpId">
		   <file file="${channelPackageId}"/>
	    </loadresource> 
		<ndvr method="POST" payload="{channelPackage: {id: ${cpId}}, channelId: ${channelId}}"	
		url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackageentry"/> 
	</target>
	
	<target name="Misc-CreateSubscription" description="Deploy specified component">
		<input message="Subscription Name" addproperty="subscriptionName" defaultvalue="subscription_Arris" />
		<input message="Subscriber Name" addproperty="subscriberName" />
		<ndvr method="POST" payload="{name: ${subscriptionName},subscriber: {externalId: ${subscriberName}}}"	
		 url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscription"/> 
    </target>
	
	<target name="C-)Create a Program Schedule(Single)" description="Deploy specified component">
		<echo>Updating the list of channels injested in CIS ${cis_ip}</echo>
		<ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
		<loadresource property="channelsInjested">
		  <file file="${moxiChannelsFile}"/>
		</loadresource>      
		<input message="Subscriber" addproperty="subscriberName" defaultvalue="001DCE8E1EF1"/>
		<input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
		<getDay property="today"/>
		<getDay text="1" property="tomorrow"/>
		<input message="Start Time"  addproperty="startRequest" defaultvalue="${today}T00:00:00.000Z"/>
		<input message="End Time"  addproperty="endRequest" defaultvalue="${tomorrow}T00:00:00.000Z"/>
		<property name="soapRequestData" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
					   &lt;soapenv:Header/&gt;
					   &lt;soapenv:Body&gt;
					      &lt;ns3:ContentQueryRequestType messageId=&quot;1&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot; xmlns:ns2=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot; xmlns:ns3=&quot;ContentQueryRequestType&quot;&gt;
					         &lt;ns2:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
					            &lt;ContentDataModel type=&quot;ADI11Merch&quot;/&gt;
					            &lt;ns2:QueryFilter op=&quot;include&quot;&gt;
					               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;channel_id:${channelSelected}&lt;/ns2:AdvancedFilterElement&gt;
					               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;start_time:[&quot;${startRequest}&quot; TO &quot;${endRequest}&quot;]&lt;/ns2:AdvancedFilterElement&gt;
					            &lt;/ns2:QueryFilter&gt;
					         &lt;/ns2:ContentQuery&gt;
					        &lt;core:Ext&gt;
					        &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
					        &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
					        &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
					            &lt;sorting&gt;
					                &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
					            &lt;/sorting&gt;
					        &lt;/QueryParameters&gt;
					         &lt;/core:Ext&gt;
					      &lt;/ns3:ContentQueryRequestType&gt;
					   &lt;/soapenv:Body&gt;
					&lt;/soapenv:Envelope&gt;" />
		<cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${soapRequestData}" outFile="${aringIdFiles}"/>
		<loadresource property="airings">
		   <file file="${aringIdFiles}"/>
		</loadresource>
		<input message="Select Airing Start" validargs="${airings}" addproperty="airingId"/>
		<ndvr method="POST" payload="{
			    &quot;airingId&quot;: &quot;${airingId}&quot;,
			    &quot;subscriber&quot;:&quot;${subscriberName}&quot;
			}"	
	    url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/programscheduleevent"/> 
	 </target>
	
	<target name="C-)Create a Program Schedule(N)" description="Deploy specified component">
			<echo>Updating the list of channels injested in CIS ${cis_ip}</echo>
			<ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
			<loadresource property="channelsInjested">
			  <file file="${moxiChannelsFile}"/>
			</loadresource>      
			<input message="Subscriber" addproperty="subscriberName" defaultvalue="001DCE8E1EF1"/>
			<input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
			<getDay property="today"/>
			<getDay text="1" property="tomorrow"/>
			<input message="Start Time"  addproperty="startRequest" defaultvalue="${today}T00:00:00.000Z"/>
			<input message="End Time"  addproperty="endRequest" defaultvalue="${tomorrow}T00:00:00.000Z"/>
			<property name="soapRequestData" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
						   &lt;soapenv:Header/&gt;
						   &lt;soapenv:Body&gt;
						      &lt;ns3:ContentQueryRequestType messageId=&quot;1&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot; xmlns:ns2=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot; xmlns:ns3=&quot;ContentQueryRequestType&quot;&gt;
						         &lt;ns2:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
						            &lt;ContentDataModel type=&quot;ADI11Merch&quot;/&gt;
						            &lt;ns2:QueryFilter op=&quot;include&quot;&gt;
						               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;channel_id:${channelSelected}&lt;/ns2:AdvancedFilterElement&gt;
						               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;start_time:[&quot;${startRequest}&quot; TO &quot;${endRequest}&quot;]&lt;/ns2:AdvancedFilterElement&gt;
						            &lt;/ns2:QueryFilter&gt;
						         &lt;/ns2:ContentQuery&gt;
						        &lt;core:Ext&gt;
						        &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
						        &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
						        &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
						            &lt;sorting&gt;
						                &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
						            &lt;/sorting&gt;
						        &lt;/QueryParameters&gt;
						         &lt;/core:Ext&gt;
						      &lt;/ns3:ContentQueryRequestType&gt;
						   &lt;/soapenv:Body&gt;
						&lt;/soapenv:Envelope&gt;" />
			<cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${soapRequestData}" outFile="${aringIdFiles}"/>
			<loadresource property="airings">
			   <file file="${aringIdFiles}"/>
			</loadresource>
			<input message="Select Airing Start" validargs="${airings}" addproperty="airingId"/>
		   <sendSchedules text="${airings}" text2="${airingId}" text3="${subscriberName}"/>
		 </target>
	
	<target name="C-)Create an Impulse recording" description="Run a linux command provided by user">
		<antcall target="getCurrentProgramFromCIS"/>
		<loadresource property="airings">
		   <file file="${aringIdFiles}"/>
		</loadresource>
		<input message="Subscriber" addproperty="subscriberName" defaultvalue="Arris"/>
		<input message="Select Airing Start" validargs="${airings}" addproperty="airingId"/>
		<ndvr method="POST" payload="{
				    &quot;airingId&quot;: &quot;${airingId}&quot;,
				    &quot;subscriber&quot;:&quot;${subscriberName}&quot;
				}"	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/programscheduleevent"/>
	</target>
	
	<target name="C-)Create a Schedule Series" description="Run a linux command provided by user">
		<input message="Subscriber" addproperty="subscriberName" defaultvalue="001DCE8E1EF1"/>
		<echo>Updating the list of channels injested in CIS ${cis_ip}</echo>
		<ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
		<loadresource property="channelsInjested">
		  <file file="${moxiChannelsFile}"/>
		</loadresource>
		<input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
		<!--<property name="channelSelected" value="18179"/>-->
		<getDay property="today"/>
		<getDay text="1" property="tomorrow"/>
		<input message="Start Time"  addproperty="startRequest" defaultvalue="${today}T00:00:00.000Z"/>
		<input message="End Time"  addproperty="endRequest" defaultvalue="${tomorrow}T00:00:00.000Z"/>
		<property name="soapRequestData" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			   &lt;soapenv:Header/&gt;
			   &lt;soapenv:Body&gt;
			      &lt;ns3:ContentQueryRequestType messageId=&quot;1&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot; xmlns:ns2=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot; xmlns:ns3=&quot;ContentQueryRequestType&quot;&gt;
			         &lt;ns2:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
			            &lt;ContentDataModel type=&quot;ADI11Merch&quot;/&gt;
			            &lt;ns2:QueryFilter op=&quot;include&quot;&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;channel_id:${channelSelected}&lt;/ns2:AdvancedFilterElement&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;start_time:[&quot;${startRequest}&quot; TO &quot;${endRequest}&quot;]&lt;/ns2:AdvancedFilterElement&gt;
			            &lt;/ns2:QueryFilter&gt;
			         &lt;/ns2:ContentQuery&gt;
			        &lt;core:Ext&gt;
			        &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
			        &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
			        &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			            &lt;sorting&gt;
			                &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
			            &lt;/sorting&gt;
			        &lt;/QueryParameters&gt;
			         &lt;/core:Ext&gt;
			      &lt;/ns3:ContentQueryRequestType&gt;
			   &lt;/soapenv:Body&gt;
			&lt;/soapenv:Envelope&gt;" />
		<cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${soapRequestData}" outFile="${aringIdFiles}" series="true"/>
		<loadresource property="airings">
		  <file file="${aringIdFiles}"/>
		</loadresource>
		<input message="Select Airing" validargs="${airings}" addproperty="airingSelected"/>
		<getSerieId text="${airingSelected}" property="serieIdSelected"/>
		<ndvr method="POST" payload="{
			   &quot;seriesId&quot;: &quot;${serieIdSelected}&quot;,
			   &quot;channelId&quot;: &quot;${channelSelected}&quot;,
			   &quot;subscriber&quot;: &quot;${subscriberName}&quot;
				           }"	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/seriesscheduleevent"/> 
	</target>
	
	<target name="E-)GET Subscriber Record References" description="Deploy specified component">
		<input message="Subscriber" addproperty="subscriberName"/>
		<ndvr method="GET" payload=""	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recordingreference?expandChildren=false&amp;scheduleEvent.subscriber=${subscriberName}"/> 
	</target>
	
	<target name="D-)FM Create Playback Session" description="Deploy specified component">
			<input message="Subscriber" addproperty="subscriberName"/>
		    <input message="Device Name" addproperty="deviceName"  defaultvalue="STB_${subscriberName}"/>
		    <input message="Recording Reference" addproperty="recordingId" />
			<ndvr method="POST" payload="{
				&quot;subscriberExternalId&quot; : &quot;${subscriberName}&quot;,
				&quot;deviceExternalId&quot; : &quot;${deviceName}&quot;,
				&quot;recordingId&quot; : &quot;${recordingId}&quot;
				}"	
			url="http://${fullfilment_ip}:${fullfilment_port}/fm/services/v1/resource/recordingplaybacksession"/> 
	</target>
	
	<target name="Misc-*Run Package Entry Script*" description="Run a linux command provided by user">
        <loadresource property="doCommand">
            <file file="${moxiChannelsFile}"/>
        </loadresource>
        <callTaskCommand text="${doCommand}" property="outCommand" />
	</target>
	
	<target name="C-)Create Schedule MSO Channel" description="Run a linux command provided by user">
		<echo>Updating the list of channels injested in CIS ${cis_ip}</echo>
		<ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
		<loadresource property="channelsInjested">
		  <file file="${moxiChannelsFile}"/>
	    </loadresource>      
		<input message="Subscriber PROVIDER" addproperty="subscriberProvider" defaultvalue="ArrisProvider"/>
		<input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
		<getDay property="today"/>
		<getDay text="1" property="tomorrow"/>
		<input message="Start Time"  addproperty="startRequest" defaultvalue="${today}T00:00:00.000Z"/>
		<input message="End Time"  addproperty="endRequest" defaultvalue="${tomorrow}T00:00:00.000Z"/>
		<property name="soapRequestData" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			   &lt;soapenv:Header/&gt;
			   &lt;soapenv:Body&gt;
			      &lt;ns3:ContentQueryRequestType messageId=&quot;1&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot; xmlns:ns2=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot; xmlns:ns3=&quot;ContentQueryRequestType&quot;&gt;
			         &lt;ns2:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
			            &lt;ContentDataModel type=&quot;ADI11Merch&quot;/&gt;
			            &lt;ns2:QueryFilter op=&quot;include&quot;&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;channel_id:${channelSelected}&lt;/ns2:AdvancedFilterElement&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;start_time:[&quot;${startRequest}&quot; TO &quot;${endRequest}&quot;]&lt;/ns2:AdvancedFilterElement&gt;
			            &lt;/ns2:QueryFilter&gt;
			         &lt;/ns2:ContentQuery&gt;
			        &lt;core:Ext&gt;
			        &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
			        &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
			        &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			            &lt;sorting&gt;
			                &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
			            &lt;/sorting&gt;
			        &lt;/QueryParameters&gt;
			         &lt;/core:Ext&gt;
			      &lt;/ns3:ContentQueryRequestType&gt;
			   &lt;/soapenv:Body&gt;
			&lt;/soapenv:Envelope&gt;" />
		<cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${soapRequestData}" outFile="${aringIdFiles}"/>
		<loadresource property="airings">
		  <file file="${aringIdFiles}"/>
	    </loadresource>
		<input message="Select Airing Start" validargs="${airings}" addproperty="airingStart"/>
		 <getTime text="${airingStart}" property="startTime" />
		<echo>${startTime}</echo>
		<input message="Select Airing END" validargs="${airings}" addproperty="airingEnd"/>
		<getTime text="${airingEnd}" property="endTime" />
		<echo>${endTime}</echo>
		<ndvr method="POST" payload="{
            &quot;scheduledStart&quot;: &quot;${startTime}&quot;,
            &quot;scheduledEnd&quot;: &quot;${endTime}&quot;,
            &quot;subscriber&quot;:&quot;${subscriberProvider}&quot;,
            &quot;requestedChannels&quot;: &quot;${channelSelected}&quot;,
            &quot;retentionPolicy&quot;: 5
			}"	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/channelscheduleevent"/> 
		<input message="Do you want to FORCE all the Recording status to CAPTURING?" validargs="y,n" addproperty="force"/>
		<condition property="do.force">
		  <equals arg1="y" arg2="${force}" />
		</condition>
	    <antcall target="forceRecording">
			<param name="subscriber" value="${subscriberProvider}"/>
		</antcall>	
    </target>
		
	<target name="F-)!Delete! ALL NDVR!" description="Run a linux command provided by user">
		<input message="All the NDVR Database will be deleted. Are you sure?" validargs="y,n" addproperty="deleteNdvr"/>
		<condition property="do.deleteNdvr">
		  <equals arg1="y" arg2="${deleteNdvr}" />
		</condition>
		<antcall target="deleteAllNdvr"/>
	</target>
	
	<target name="G-)Cancel Schedule Series" description="Run a linux command provided by user">
	  <input message="Enter the Series Id you want to cancel" addproperty="cancelTargetSeries"/>
		<ndvr method="PUT" payload="{}"	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/seriesscheduleevent/${cancelTargetSeries}/finish"/>
	</target>

	
	<target name="Misc-Get Posters" description="Deploy specified component">
		<ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
		<loadresource property="channelsInjested">
		  <file file="${moxiChannelsFile}"/>
	    </loadresource>
		<getDay property="today"/>
		<getDay text="1" property="tomorrow"/>
		<input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
		<input message="Start Time"  addproperty="startRequest" defaultvalue="${today}T00:00:00.000Z"/>
		<input message="End Time"  addproperty="endRequest" defaultvalue="${tomorrow}T00:00:00.000Z"/>
		<property name="soapRequestData" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			   &lt;soapenv:Header/&gt;
			   &lt;soapenv:Body&gt;
			      &lt;ns3:ContentQueryRequestType messageId=&quot;1&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot; xmlns:ns2=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot; xmlns:ns3=&quot;ContentQueryRequestType&quot;&gt;
			         &lt;ns2:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
			            &lt;ContentDataModel type=&quot;ADI11Merch&quot;/&gt;
			            &lt;ns2:QueryFilter op=&quot;include&quot;&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;channel_id:${channelSelected}&lt;/ns2:AdvancedFilterElement&gt;
			               &lt;ns2:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;start_time:[&quot;${startRequest}&quot; TO &quot;${endRequest}&quot;]&lt;/ns2:AdvancedFilterElement&gt;
			            &lt;/ns2:QueryFilter&gt;
			         &lt;/ns2:ContentQuery&gt;
			        &lt;core:Ext&gt;
			        &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
			        &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
			        &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
			            &lt;sorting&gt;
			                &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
			            &lt;/sorting&gt;
			        &lt;/QueryParameters&gt;
			         &lt;/core:Ext&gt;
			      &lt;/ns3:ContentQueryRequestType&gt;
			   &lt;/soapenv:Body&gt;
			&lt;/soapenv:Envelope&gt;" />
		<cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${soapRequestData}" outFile="${aringIdFiles}"/>
	    <loadresource property="airingList">
		  <file file="${aringIdFiles}"/>
	    </loadresource>
	</target>
	
	<target name="Misc-Get Subscriber Posters" description="Run a linux command provided by user">
		<input message="Subscriber" addproperty="subscriberName"/>
		<!-- <ndvr method="GET" payload=""	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recordingreference?expandChildren=true&amp;scheduleEvent.subscriber=${subscriberName}" programId="true" fileName="${programIds}" /> -->
		<loadresource property="channelsInjested">
			<file file="${programIds}"/>
		</loadresource>
		<downloadPosters text="${channelsInjested}"/>    
	</target>
	
	
	<!-- Scripts Private Tasks resources-->
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: name                      
         - - - - - - - - - - - - - - - - - -->
    <target name="sendSchedule">
    	<ndvr method="POST" payload="{
    					    &quot;airingId&quot;: &quot;${airingIter}&quot;,
    					    &quot;subscriber&quot;:&quot;${subscriberName}&quot;
    					}"	
         url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/programscheduleevent"/>     
    </target>

	<target name="deleteAllNdvr" if="do.deleteNdvr">
		<ndvr method="DELETE" url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/useraccount?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscription?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/device?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackageentry?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackage?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/subscriber?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recordingreference?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recording?"/>
		<antcall target="waitMs"/>
		<ndvr method="DELETE" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/scheduleEvent?"/>
	</target>
	
	<target name="SendPackageEntry script">
		<ndvr method="POST" payload="{channelPackage: {id: ${entryName}}, channelId: ${channelName}}"	
		url="http://${sms_ip}:${sms_port}/sms/services/v1/resource/channelpackageentry"/>
	</target>
	
	<target name="forceRecording" if="do.force" >
		<antcall target="2-Force - performCreateRecordings">
			<param name="startForce" value="${startTime}"/>
			<param name="endForce" value="${endTime}"/>
		</antcall>	
		<antcall target="waitMs"/>
		<antcall target="waitMs"/>
		<antcall target="3-NSS Recording Updates Notifier"/>
		<antcall target="waitMs"/>
		<antcall target="waitMs"/>
		<ndvr method="GET" payload=""
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recordingreference?expandChildren=false&amp;scheduleEvent.subscriber=${subscriber}" fileName="${referenceFile}" reference="true"/>
		<loadresource property="recordRef">
		  <file file="${referenceFile}"/>
	    </loadresource>
		<echo>${recordRef}</echo>
		<startRecordings text="${recordRef}"/>
	</target>
	
	<target name="2-Force - performCreateRecordings">
		<ndvr method="POST" payload="{
					&quot;params&quot;: {
					&quot;dateFrom&quot;: &quot;${startForce}&quot;,
					&quot;dateTo&quot;: &quot;${endForce}&quot;
			  }
			}"	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/call/ChannelScheduleEventRecordingsCreator/performCreateRecordings"/>
	</target>
	
	<target name="3-NSS Recording Updates Notifier">
		<ndvr method="POST" payload="{params: {numberOfDaysForAnalysis: 2,maxNumberOfRecordings: 500}}"	
		url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/call/NSSRecordingUpdatesNotifier/findAndNotifyToNSSRecordingUpdates"/> 
	</target>

	<target name="StartRecording">
		<ndvr method="PUT" payload="{}" url="http://${ndvr_ip}:${ndvr_port}/cs/services/v1/resource/recording/${idRecording}/start"/>
	</target>
	
	<target name="downloadItem">
	 <!-- <waitfor maxwait="300" maxwaitunit="millisecond" timeoutproperty="fail.poster">
	  	<not>
	      <http url="http://204.16.98.185/ibc/programs/${programId}/art/v5" />
	    </not>
	  </waitfor>
	  <echo>${fail.poster}</echo>	
	  <condition property="fail.poster" value="false">
			<isset property="result" />
	  </condition>
	  <echo>${result}</echo>
	  <echo>http://204.16.98.185/ibc/programs/${programId}/art/v5</echo> -->
	  <condition property="offline">
        <isreachable url="http://204.16.98.185/ibc/programs/${programId}/art/v5" timeout="1"/>
       </condition>
       <echo>${offline}</echo>
       <echo>http://204.16.98.185/ibc/programs/${programId}/art/v5</echo>
	</target>
	
	
	<target name="check poster">
	  <waitfor maxwait="300" maxwaitunit="millisecond" timeoutproperty="fail.poster">
	  	<not>
	      <http url="http://204.16.98.185/ibc/programs/EP013957360027/art/v5"/>
	    </not>
	  </waitfor>
	  <echo>${fail.poster}</echo>	
		<condition property="fail.poster" value="false">
			<isset property="result" />
		 </condition>
	  <echo>${result}</echo>	
	</target>

    <target name="waitMs">
      <sleep milliseconds="1000"/>
    </target>
	

	<!-- - - - - - - - - - - - - - - - - - 
          target: getCurrentProgramFromCIS                      
         - - - - - - - - - - - - - - - - - -->
    <target name="getCurrentProgramFromCIS">
	   <echo>Updating the list of channels injested in CIS ${cis_ip}</echo>
	   <ndvr method="GET" channelList="true" fileName="${moxiChannelsFile}" url="http://${cis_ip}:${cis_port}/solr/collection1/select?start=0&amp;rows=10000&amp;wt=xml&amp;indent=true&amp;facet=true&amp;facet.query=%2a:%2a&amp;facet.field=channel_id"/>
	   <loadresource property="channelsInjested">
		 <file file="${moxiChannelsFile}"/>
	   </loadresource>      
	   <input message="Select Channel" validargs="${channelsInjested}" addproperty="channelSelected"/>
	   <getDay property="today"/>
       <getCurrentTime text="3" property = "currentTime"/>
       <property name="requestcurrentProgramCIS" value="&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:cis=&quot;http://www.scte.org/schemas/130-4/2008a/cis&quot; xmlns:core=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
        &lt;soapenv:Header/&gt;
        &lt;soapenv:Body&gt;
           &lt;cis:ContentQueryRequest messageId=&quot;acs-342&quot; version=&quot;1.1&quot; identity=&quot;40DA910E-01AF-5050-C7EA-5D7B4A475311&quot; system=&quot;sys-1&quot;&gt;
              &lt;core:InitiatorData&gt;xxxInitiatorData&lt;/core:InitiatorData&gt;
              &lt;cis:ContentQuery contentQueryId=&quot;1&quot; expandOutput=&quot;true&quot;&gt;
                 &lt;cis:QueryFilter op=&quot;include&quot;&gt;
                    &lt;cis:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;( channel_id:18179)&lt;/cis:AdvancedFilterElement&gt;
                    &lt;cis:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;( start_time:[ * TO &quot;${today}T${currentTime}&quot;] )&lt;/cis:AdvancedFilterElement&gt;
                    &lt;cis:AdvancedFilterElement queryId=&quot;queryId&quot; ql=&quot;solr&quot;&gt;( end_time:[ &quot;${today}T${currentTime}&quot; TO * ] )&lt;/cis:AdvancedFilterElement&gt;
                 &lt;/cis:QueryFilter&gt;
              &lt;/cis:ContentQuery&gt;
              &lt;core:Ext&gt;
             &lt;start xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;0&lt;/start&gt;
             &lt;rows xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;50&lt;/rows&gt;
             &lt;QueryParameters xmlns:ns4=&quot;http://www.scte.org/schemas/130-2/2008a/core&quot;&gt;
                 &lt;sorting&gt;
                     &lt;criteria key=&quot;start_time&quot; order=&quot;asc&quot;/&gt;
                 &lt;/sorting&gt;
             &lt;/QueryParameters&gt;
              &lt;/core:Ext&gt;
           &lt;/cis:ContentQueryRequest&gt;
        &lt;/soapenv:Body&gt;
     &lt;/soapenv:Envelope&gt;"/>	
    <cisEPG url="http://${cis_ip}:${cis_port}/cis-standard-war/soap/cisServerService" requestFile="${requestcurrentProgramCIS}" outFile="${aringIdFiles}"/>
    <getPosterFile text="${aringIdFiles}" text2="" />	
    </target>
	
	<scriptdef name="doAjax" language="javascript">
		<attribute name="text" />
		  <![CDATA[
		     var xmlhttp;
		echo = project.createTask("echo");
		  	       echo.setMessage("calling ajax");
		  	       echo.perform();
		    if (window.XMLHttpRequest) {
		        // code for IE7+, Firefox, Chrome, Opera, Safari
		        xmlhttp = new XMLHttpRequest();
		    } else {
		        // code for IE6, IE5
		        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
		    }

		    xmlhttp.onreadystatechange = function() {
		        if (xmlhttp.readyState == 4 ) {
		           if(xmlhttp.status == 200){
		                    echo.setMessage("xmlhttp.status == 200");
				  	       echo.perform();
		           }
		           else if(xmlhttp.status == 400) {
		                           echo.setMessage("xmlhttp.status == 400");
						  	       echo.perform();
		             
		           }
		           else {
		                   echo.setMessage("xmlhttp.readyState!=4");
						   echo.perform();
		           }
		        }
		    }

		    xmlhttp.open("GET", "ajax_info.txt", true);
		    xmlhttp.send();
		  ]]>
		</scriptdef>
	
	<scriptdef name="getPosterFile" language="javascript">
	<attribute name="text" />
	<attribute name="text2" />
	  <![CDATA[
		 var text = attributes.get("text");
		 var pId = "";
	   	 var list = text.split("_");
	   	 var i=0;
		 var count = 0;
	   	 for(i=0; i<list.length; i++)
	   	 {   
           echo = project.createTask("echo");
  	       echo.setMessage("Program Id: " +  list[0]);
  	       echo.perform();
		   pId = list[0];
		   project.setProperty("programId", pId);
		   project.setProperty("channelName", list[i]);	   
	       project.executeTarget("SendPackageEntry script");
	       project.executeTarget("waitMs");
	   	 }
	  ]]>
	</scriptdef>
	
	<scriptdef name="getDay" language="javascript">
    <attribute name="text" />	
    <attribute name="property" />
		<![CDATA[
		   var text = attributes.get("text");
		   var d = new Date();
		   month = '' + (d.getMonth() + 1);
		   day = '' + d.getDate();
		   if(text){
		     day = parseInt(day) + parseInt(text);
		     day = day + "";
		   }
		   year = d.getFullYear();
    	   if (month.length < 2) month = '0' + month;
		   if (day.length < 2) day = '0' + day;
           var result = [year, month, day].join('-');
		   project.setProperty(attributes.get("property"), result);
		]]>
    </scriptdef>
	
	<scriptdef name="getCurrentTime" language="javascript">
		<attribute name="text" />
	    <attribute name="property" />
			<![CDATA[
		       var text = attributes.get("text");
			   var d = new Date();
			   var hours = d.getHours() + parseInt(text);
			   var minutes = d.getMinutes();
		       var result = hours + ":" + minutes + ":00.000Z";
			   project.setProperty(attributes.get("property"), result);
			]]>
	    </scriptdef>
	
	<scriptdef name="callTaskCommand" language="javascript">
	<attribute name="text" />
	<attribute name="property" />
	  <![CDATA[
		 var text = attributes.get("text");
	   	 var list = text.split("\n");
	   	 var i=0;
	   	 for(i=0; i<list.length; i++)
	   	 {   
	   	      project.setProperty(attributes.get("property"), list[i]);
	   	      echo = project.createTask("echo");
	    	  echo.setMessage("Channel Id: " + list[i]);
	    	  echo.perform()
	   	      project.executeTarget("SendPackageEntry script");
	   	      echo = project.createTask("echo"); 
	    	  echo.setMessage("Package Channel Entry done for channel: " + list[i]);
	    	  echo.perform();  
		      project.executeTarget("waitMs");  
	   	    
	   	 }
	  ]]>
	</scriptdef>
	
	<scriptdef name="getConfigPath" language="javascript">
	<attribute name="text" />
	<attribute name="text2" />	
	<attribute name="property" />
	
	  <![CDATA[
		 var text = attributes.get("text");
		 var scrFlag = true;
		 var projectName =  attributes.get("text2");
		 projectName = projectName.trim();
		 if(text.indexOf("classes")>0){
		   scrFlag = false;
		 }
		 if(scrFlag){
		   resultPath = text.substring(0, text.indexOf(projectName) + projectName.length() + 1) + "WebContent/config";
		 }else{
		   resultPath = text.substring(0, text.indexOf(projectName) + projectName.length() + 1) + "config";
		 }
	     project.setProperty(attributes.get("property"), resultPath);
	  ]]>
	</scriptdef>
	
	<scriptdef name="getSubscriber" language="javascript">
	<attribute name="text" />
	<attribute name="property" />
	
	  <![CDATA[
		 var text = attributes.get("text");
		 var list = text.split("\"subscriber\":");
		 var Tokens = list[1].split("\"");
		 var subscriber= Tokens[1].trim();
	     project.setProperty(attributes.get("property"), subscriber);
	  ]]>
	</scriptdef>
	
	<scriptdef name="doPackageEntry" language="javascript">
	<attribute name="text" />
	<attribute name="text2" />
	  <![CDATA[
		 var text = attributes.get("text");
		 var pId =  attributes.get("text2");
	   	 var list = text.split(",");
	   	 var i=0;
	   	 for(i=0; i<list.length; i++)
	   	 {   
           echo = project.createTask("echo");
  	       echo.setMessage("Creating Package Entry for channelId " + list[i]);
  	       echo.perform();
		   project.setProperty("entryName", pId);
		   project.setProperty("channelName", list[i]);	   
	       project.executeTarget("SendPackageEntry script");
	       project.executeTarget("waitMs");
	   	 }
	  ]]>
	</scriptdef>
	
	<scriptdef name="getTime" language="javascript">
		<attribute name="text" />
		<attribute name="property" />
		  <![CDATA[
			 var text = attributes.get("text");
		   	 var list = text.split("_");
		     project.setProperty(attributes.get("property"), list[2]);
		  ]]>
	</scriptdef>
	
	<scriptdef name="startRecordings" language="javascript">
			<attribute name="text" />
			  <![CDATA[
				 var text = attributes.get("text");
		         var ids = text.split(",");
				 var i = 0;
			   	 for(i;i<ids.length;i++){
		              echo = project.createTask("echo");
			    	  echo.setMessage("Sending Start for Recording Id: " + ids[i]);
			    	  echo.perform()
		              project.setProperty("idRecording", ids[i]);
				      project.executeTarget("StartRecording");
				      project.executeTarget("waitMs");  
		         }
				
			  ]]>
	</scriptdef>
	
	<scriptdef name="downloadPosters" language="javascript">
			<attribute name="text" />
			  <![CDATA[
				 var text = attributes.get("text");
		         var ids = text.split(",");
				 var i = 0;
			   	 for(i;i<ids.length;i++){
		              echo = project.createTask("echo");
			    	  echo.setMessage("Sending Start for Recording Id: " + ids[i]);
			    	  echo.perform()
		              project.setProperty("programId", ids[i]);
				      project.executeTarget("downloadItem"); 
		         }
				
			  ]]>
	</scriptdef>
	
	<scriptdef name="sendSchedules" language="javascript">
				<attribute name="text" />
		        <attribute name="text2" />
		        <attribute name="text3" />
				  <![CDATA[
					 var airingList = attributes.get("text");
		             var airingStart = attributes.get("text2");
		             var name = attributes.get("text3");
			         var ids = airingList.split(",");
					 var i = 0;
		             var startFound = false;
				   	 for(i;i<ids.length;i++){
		                 if(ids[i]==airingStart){
		                   startFound = true;
		                  }
		                  if(startFound){
		                       echo = project.createTask("echo");
						       echo.setMessage("Sending schedule program for: " + ids[i]);
						       echo.perform();
					           project.setProperty("airingIter", ids[i]);
				               project.setProperty("subscriberName", name);
							   project.executeTarget("sendSchedule");
							   project.executeTarget("waitMs");  
		                  }
			         }
					
				  ]]>
	</scriptdef>
	
	<scriptdef name="escapePageUrl" language="javascript">
			<attribute name="text" />
		    <attribute name="property" />
			  <![CDATA[
		           var text = attributes.get("text");
	   	           var result = escape(text);
	               project.setProperty(attributes.get("property"), result);
			  ]]>
	</scriptdef>
	
	<scriptdef name="getSerieId" language="javascript">
				<attribute name="text" />
			    <attribute name="property" />
				  <![CDATA[
			           var text = attributes.get("text");
		   	           var result = text.split("_")[0];
		               project.setProperty(attributes.get("property"), result);
				  ]]>
	</scriptdef>
	
	<scriptdef name="addJsonElement" language="javascript">
				<attribute name="text" />
		        <attribute name="text2" />
			    <attribute name="property" />
				  <![CDATA[
			           var text = attributes.get("text");
					   var text2 = attributes.get("text2");
		               var count = parseInt(text2);
					   var jsonStr = JSON.stringify(eval('('+text+')'));	
		               var jsonObj = JSON.parse(jsonStr);
		               var item = jsonObj.entities[jsonObj.entities.length-1];
				       var index = 5000 + parseInt(jsonObj.entities.length);
		               var i = 0;
					   for(i=0;i<count-1;i++){
		                  var newItem = JSON.parse(JSON.stringify(item));
		                  newItem.id = index;			  	
		                  index = index + 1;
		                  newItem.recording.program.originalTitle = "Mock_" + newItem.id;
		                  jsonObj['entities'].push(newItem);
		               }
		               project.setProperty(attributes.get("property"), JSON.stringify(jsonObj));
				  ]]>
	</scriptdef>

</project>